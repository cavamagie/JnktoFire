import groovy.json.JsonOutput
pipeline {
    agent {
           docker { image params.Images 

           args "-u root:root"
             }
//docker { image 'node:params.Images' }
}
    stages {
        stage('Vars') {
          steps {
            script {
              writeFile file: 'params.json', text: JsonOutput.toJson(params)
              echo sh(returnStdout: true, script: 'env')

            }
          }
        }
       stage('CheckVars') {
   
            steps {
                sh 'pwd'             
                sh "ls -latr"
                sh "ansible-playbook Playbook.yaml -v -e \"@params.json\""
            }

                }
        stage('Clone') {
  
   
            steps {
                sh 'pwd'
                sh " git clone https://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@github.ibm.com/Andrea-Cavaletti/fyre-automation.git /tmp/fyre"                
                sh "ls /tmp"       
            }

                }        
       stage('Run_Provisioning_OCP') {

   
            steps {
                sh 'pwd'             
                sh "ls /tmp"       
                sh "ansible-playbook /tmp/fyre/fyre-automation.yaml -e \"@params.json\""
            }

                }
       stage('Prereq CP') {

   
            steps {
                sh 'pwd'             
                sh "ls /tmp"  
                sh "sleep 1" 


            }

                }
       stage('Deploy CP') {

   
            steps {
                sh 'pwd'             
                sh "ls /tmp"  
                sh "sleep 1" 


            }

                }
            
        stage('clean') {

   
            steps {
                sh 'pwd'

                sh " rm -rf /tmp/fyre"                

            }

                }
            }
        }
